{
    "name": "Web SDK",
    "text": "<p>The SuperAwesome Web SDK (Software Development Kit) lets you to easily add COPPA-compliant pre-roll and display advertisements to your website.</p>\n",
    "sections": [
        {
            "name": "Getting Started",
            "text": "<p>If you haven&#39;t already registered your app on the SuperAwesome Dashboard, you can do that by going to <a href=\"http://dashboard.superawesome.tv\">http://dashboard.superawesome.tv</a>. \nBefore we approve your user, you can start testing with our <a href=\"/docs/websdk/02%20Testing%20Placements\">test placements</a>.</p>\n<p><img src=\"img/01.Dashboard.png\" alt=\"\" title=\"Registering an app on the dashboard\"></p>\n<p>Once your app is registered, you can create placements for it and use the documentation provided below to integrate these placements into your website.</p>\n"
        },
        {
            "name": "Testing Placements",
            "text": "<p>The following demo placements that can be used for testing. These placements have a 100% fill rate.</p>\n<table>\n<thead>\n<tr>\n<th>Placement ID</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5687</td>\n<td>320x50 banner</td>\n</tr>\n<tr>\n<td>5692</td>\n<td>320x480 interstitial</td>\n</tr>\n<tr>\n<td>5740</td>\n<td>video</td>\n</tr>\n</tbody>\n</table>\n"
        },
        {
            "name": "Display Ads",
            "sections": [
                {
                    "name": "Simple Display Ads",
                    "text": "<p>The simplest way to load a display ad (banner, floor placement, etc) in your webpage is to load an AwesomeAds script tag in your HTML body.</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;https://ads.superawesome.tv/v2/ad.js?placement=5687&amp;test=true&quot;&gt;&lt;/script&gt;\n</code></pre><p>Notice the two parameters passed:</p>\n<ul>\n<li><code>placement=5687</code> - which specifies one of the test placements defined earlier. It&#39;s ok to replace 5687 with whatever placement you&#39;ve defined in the Dashboard</li>\n<li><code>test=true</code> - which specifies that this ad should be loaded in test mode. Again, when switching to your own placements, you&#39;ll need to delete this parameter</li>\n</ul>\n<p>An example webpage with this type of simple ad might look like the following:</p>\n<pre><code>\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;\n            AwesomeAds Example 1: Simple Banner\n        &lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;!--\n        - Invoke this script tag to make the simplest call to get a new ad\n        - @param: placement - the ID of the placement for which you want to load an ad\n        - @param: test - (can be true or false); specifies if the ad will be loaded in test mode or not \n        --&gt;\n        &lt;script type=&quot;text/javascript&quot; src=&quot;https://ads.superawesome.tv/v2/ad.js?placement=5687&amp;test=true&quot;&gt;&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"
                },
                {
                    "name": "Add a Display Ad to a Div",
                    "text": "<p>While the previous example is very simple, it does have the disadvantage that you don&#39;t have any control over where in the webpage the placement is displayed.\nIn order to have more control, you&#39;ll need to laod the ad in two steps.</p>\n<p>First, load the AwesomeAds SDK in your HTML file header:</p>\n<pre><code>&lt;head&gt;\n    &lt;script type=&quot;text/javascript&quot; src=&quot;https://ads.superawesome.tv/v2/ads.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre><p>Notice there are no more parameters. You just load the SDK from the <code>https://ads.superawesome.tv/v2/ads.js</code> URL.\nYou&#39;ll then need a parent HTML element to place your ad in. This might be a <code>Div</code> tag, a table row or any HTML element.</p>\n<pre><code>&lt;body&gt;\n    &lt;div id=&quot;ad_area&quot; style=&quot;position:absolute; top:50px; width:320px; height:50px;&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre><p>Then, at the end of your BODY tag, or, if you&#39;re using jQuery, in the <code>document.ready()</code> function, you need to create a <code>AwesomeDisplay</code> object.</p>\n<pre><code>var ad = new AwesomeDisplay(5687).test();\ndocument.getElementById(&quot;ad_area&quot;).appendChild(ad.element);\n</code></pre><p>Notice the AwesomeDisplay object constructor takes just one parameter, the placement Id. Additionally you can specify if you&#39;re in test mode or not. </p>\n<p>An example webpage with this type of simple ad might look like the following:</p>\n<pre><code>\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;\n            AwesomeAds Example 2: Simple Banner\n        &lt;/title&gt;\n\n        &lt;!--\n        - First load in the pages&#39; hader the AwesomeAds SDK, as a Javascript file \n        --&gt;\n        &lt;script type=&quot;text/javascript&quot; src=&quot;https://ads.superawesome.tv/v2/ads.js&quot;&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n        &lt;!--\n        - In the HTML body define a div with ID = &quot;ad_area&quot;\n        - aditionally you may want to specify width and height \n        --&gt;\n        &lt;div id=&quot;ad_area&quot; style=&quot;position:absolute; top:50px; width:320px; height:50px;&quot;&gt;&lt;/div&gt;\n\n        &lt;!--\n        - Finally, either at the end of the &lt;BODY&gt; tag or on jQuerys&#39; document.ready() function\n        you need to load the ad\n        - @step1: Create an AwesomeDisplay object name ad; \n            - specify the placement Id as an integer value\n            - specify whether the ad is in test mode or not\n        - @step2: Add the loaded ad content to the &lt;DIV&gt; element we defined earlier, as a child\n        --&gt;\n        &lt;script type=&quot;text/javascript&quot;&gt;\n            (function() {\n\n                var ad = new AwesomeDisplay(5687).test();\n                document.getElementById(&quot;ad_area&quot;).appendChild(ad.element);\n\n            })();\n        &lt;/script&gt;\n\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"
                },
                {
                    "name": "Async Loading",
                    "text": "<p>If you want to load the AwesomeAds SDK async and start loading the ad once that&#39;s done, you can place the following code in your Body tag:</p>\n<pre><code>&lt;script class=&quot;awesome_ad_script&quot; type=&quot;text/javascript&quot; src=&quot;https://ads.superawesome.tv/v2/ads.js&quot; async&gt;\n    //This script tag will be re-run when AwesomeAds loads\n    if(typeof AwesomeDisplay !== &quot;undefined&quot; &amp;&amp; window.awesome_ad_script){\n        var ad = new AwesomeDisplay(5687).test();\n        ad.insert(window.awesome_ad_script);\n    }\n&lt;/script&gt;\n</code></pre>"
                }
            ]
        },
        {
            "name": "Video Ads",
            "text": "<p>Video ads are loaded in much the same fashion. You&#39;ll first need to load the AwesomeAds SDK in your webpage head tag:</p>\n<pre><code>&lt;head&gt;\n    &lt;script type=&quot;text/javascript&quot; src=&quot;https://ads.superawesome.tv/v2/ads.js?video=true&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre><p>Notice the <code>video=true</code> parameter when loading the script.</p>\n<p>Then, in the body tag, inside a script tag or in your document.ready() function, if you&#39;re using jQuery, you&#39;ll need to create an AwesomeVideo object, much the same way you created an AwesomeDisplay object.</p>\n<pre><code>var ad = new AwesomeVideo(5740).write();\n</code></pre><p>This will create the object, start loading it and write the output to the window.</p>\n<p>The AwesomeVideo object has two callbacks you might find useful:</p>\n<pre><code>ad.finished(function (){\n    console.log(&#39;This function gets called when the movie has ended playing&#39;);\n});\n\nad.setOnEmpty(function() {\n    console.log(&#39;This function gets called when the movie is empty / there is no valid movie to show&#39;);\n});\n</code></pre><p>A full example webpage with all these would look like the following:</p>\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;\n            AwesomeAds Example 4: Pre Roll\n        &lt;/title&gt;\n\n        &lt;!--\n        - The first thing to do is to load the AwesomeAds SDK in the header of the HTML file\n        - an additional step is to specify the video=true parameter\n        --&gt;\n        &lt;script type=&quot;text/javascript&quot; src=&quot;https://ads.superawesome.tv/v2/ads.js?video=true&quot;&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n\n        &lt;!--\n        - Inside the body of the HTML, create a new AwesomeVideo object, with a single parameter, the placement Id\n        - then write the new object to the window\n        - @callbacks:\n            - you can assign a &quot;finished&quot; callback to execute an action when the pre-roll finishes execution\n            - you can also assign an &quot;onEmpty&quot; callback in case the data received from the server is empty\n        --&gt;\n        &lt;script type=&quot;text/javascript&quot;&gt;\n\n            (function() {\n\n                var ad = new AwesomeVideo(24532).write();\n                ad.finished(function (){\n                    console.log(&#39;End of movie&#39;);\n                });\n                ad.setOnEmpty(function() {\n                    console.log(&#39;Empty movie&#39;);\n                });\n\n            })();\n\n        &lt;/script&gt;\n\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"
        },
        {
            "name": "Technical Support",
            "text": "<p>If you have any questions or you need technical support, please, do not hesitate to contact us at <a href=\"devsupport@superawesome.tv\">devsupport@superawesome.tv</a>. We will make every attempt to answer your inquiry as quickly as possible.</p>\n"
        },
        {
            "name": "License",
            "text": "<p>See the LICENSE.txt file for more information.</p>\n"
        }
    ]
}